/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 16.04.2 ] */

/* [wxMaxima: title   start ]
Rostock Calibration
   [wxMaxima: title   end   ] */

/* [wxMaxima: comment start ]
Copyright © 2014 Peter Hercek.
You can use, modify, and redistribute this under GNU GENERAL PUBLIC LICENSE Version 3.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
This document helps to find proper values for these firmware parameters: tower positions, diagonal rod length,
and top endstop position offsets. Errors in these firmware parameters can be fixed perfectly provided the
assumptions bellow are valid.
* We assume that the towers are parallel. Ensuring that the towers are parallel is tricky. Drill both top and
bottom plates at once. This ensures top and bottom tower positions are exactly the same. That is the easy
part. Then do not twist top plate with respect to the bottom one. They are not twisted if diagonals have the
same length.
* We assume that all your diagonal rods have the same length (although the common length is not known
precisely). You can easily achieve this with a jig. (Note: If your diagonal rods do not have the same length it will
introduce rotations to your platform. These will not have that big impact on z-height but will have significant
impact on x/y precision.)
* We assume that the bed is perpendicular to the towers. Making sure the bed is perpendicular is harder but
callibration can partially fix it with the top endstop adjustements. This compensation will not be perfect. For
example, if your bed is 1 mm higer on one side (compared to the other side) then this will lead to errors smaller
than about 0.3 mm, possibly much smaller. I did not investigate this in details. This compensation using top
endstops will also lead to your prints being as skewed as your bed is.
* We assume no other auto level is active (e.g. Johann's auto leveling cannot be enabled).
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
A note on manual leveling (i.e. doing the same as this notebook without running it):
1) level at the tower bases by adjusting endstops
2) level the points at the far end of a tower base (i.e. between the other two towers); these far points
   should be located significantly behind the line connecting the other two virtual tower bases
   * moving tower along bed radius has the biggest z-height impact on the oposite side of the tower
      (if it is symetricaly high/low on the oposite side then you need to move it nearer/further in firmware)
   * moving tower perpendiculary to bed radius has the biggest z-height impact just to the left/right of
     the tower - one side is going up and the other side is going down
     (if e.g. left side is up and right is down then you need to move tower in firmware to the right)
   * if all the points opposite of all towers have the same z-height error then adjust delta radius
      (if they are high/low then you need to decrease/increase delta radius in firmware)
3) level the center by adjusting diagonal rod length or delta radius
    * diagonal rod length: if head is too high/low in the center then you need to increase/decrease the length
    * delta radius: if head is too high/low in the center then you need to increase/decrease delta radius
This manual leveling is very iterative. If you fix something a bit, the fix will have impact on z-heights on
all the other positions. So you must start from the beginning after each fix. It is best to fix the biggest
errors first. If you cannot decide which one is the biggest one then go in the order of the points above.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Lets go back to this math supported approach.
In this document:
* coordinates are refered as x,y,z;
* towers are refered as a,b,c;
* diagonal rod length is r;
* imprecise values (because of incorrect firmware parameters) have prefix i;
* tower carriage position offsets are marked as α, β, γ for towers a, b, c respectively;
* tower carriage positions (coordinates on towers) are ta, tb, tc.
We want to make our coordinate system as fixed as possible. Lets mark (x,y) coordinates of towers (a, b, c) as
xa, ya, xb, yb, xc, yc. We place the coordinate system so that:  xa = -xb, ya = yb, yc = -2*ya. This will allow us to
define tower positions with only 3 numbers. If the base plate is done precisely then it will be the same as the
firmware defaults computed from DELTA_RADIUS (see how tower positions are computed from delta radius
in Configuration.h).
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Define your geometry as specified in the firmware here:
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ir : 297.85 * 80 $
ixa : -117.75317 * 80 $
iya : -68.10545 * 80 $
ixc : -1.98035 * 80 $
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
These tower positions and their errors are fixed because of the limitations on how we place our coordinate system.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ixb : - ixa $
xb : -xa $
iyb : iya $
yb : ya $
iyc : -2*iya $
yc : -2*ya $
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Equations for the firmware. These equations work with imprecise firmware parammeters which leads to incorrect
z value at heatbed (and also incorrect x and y values - depends on the exact path we are approaching the
heatbed). We need these equations to get ta,tb,tc from them but we are not going to really use them since
firmware will report ta, tb, tc directly when we query the current position (M114)). Here they are just for reference.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Acur : (ix-ixa)^2 + (iy-iya)^2 + (iz-ta)^2 - ir^2 = 0 $
Bcur : (ix-ixb)^2 + (iy-iyb)^2 + (iz-tb)^2 - ir^2 = 0 $
Ccur : (ix-ixc)^2 + (iy-iyc)^2 + (iz-tc)^2 - ir^2 = 0 $
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Equations for precise towerPositions/diagonalRod with carriage positions on towers (ta,tb,tc) adjusted by
offsets (α,β,γ). These equations are valid when the head is at the heatbed (z=0).
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
A : (x-xa)^2 + (y-ya)^2 + (ta+α)^2 - r^2 = 0 $
B : (x-xb)^2 + (y-yb)^2 + (tb+β)^2 - r^2 = 0 $
C : (x-xc)^2 + (y-yc)^2 + (tc+γ)^2 - r^2 = 0 $
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Lets precisely tie (r,xa,xb,xc,ya,yb,yc,α,β,γ) for one (ta,tb,tc) representing one point on heatbed.
We do it by getting rid of x and y.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
XEq : solve([A-B], [x]) ;
YEq : solve([A+B-2*C], [y]) ;
ZEq : subst( rhs(XEq[1]), x, subst(rhs(YEq[1]), y, C) ) ;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Now we will measure errors in at least 7+1 positions (x,y).
The best points are the center, near each tower base, and most far away from each tower base. Select the
non-center points as far away from the center as possible. These are the first 7 points. Add one more point
which is far from the other 7 points and not at the same radius (e.g. between two adjacent points at bed edge
but at half the radius). The measurement will be done by touching printhead with the heatbed at these points
and reading out the carriage positions on towers as reported by the firmware (ta,tb,tc).
E.g. if you have a square bed then instead of one additional point add 4 of them - one for each square bed
corner. You can add more points or you can measure each point more than once. But based on Dejay Rezme's
simulations at least 8 (=7+1) distinct points are needed to achieve a good convergence.
You can use any unit you like but the same unit must be used everywhere. If you are using Marlin then
you will probably enter data in millimeters. If you are using Repetier then you will probably use steps.
The measurements below are in steps. One block of numers represents one measurement point. The first
point was measured 3 times, the other points were measured 2 times. A square bed was probed. The probe
points were: centre, tower A base, opposite of tower C, tower B base, opposite of tower A, tower C base,
opposite of tower B, bottom left corner, bottom right corner, top right corner, top left corner.
The data format is [[ta,tb,tc]]. Define the measured data here:
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
m :
[[17822,24351,13495] ,[18437,22635,22673] ,[21777,19259,23289] ,[18265,19189,24271]
,[20100,23998,19202] ,[21134,20303,23423] ,[23608,21316,18085] ,[21327,23619,18048]
,[15283,21818,23071] ,[22954,22194,16436] ,[22658,22658,18267] ,[15462,23456,21264]
,[19992,23908,19858] ,[24142,19410,19024] ,[22131,19660,22982] ,[18106,23124,22117]
,[24040,20156,16848] ,[23847,20770,17932] ,[22112,22875,15351] ,[19829,14828,24012]
,[20772,13745,23477] ,[21072,19367,23640] ,[20213,21851,23056] ,[21732,21732,22400]
,[23180,19113,21964] ,[23160,21626,20316] ,[22599,22599,16456] ,[23330,21809,18190]
,[20722,19873,23690] ,[21110,22681,21889] ,[24526,17088,16426] ,[21950,22719,20944]
,[11655,20367,23305] ,[21312,23606,17176] ,[21804,23326,17302] ,[18978,23807,20778]
,[23602,19627,21037] ,[14995,23157,21635] ,[20267,23417,21172] ,[24329,17800,13648]
,[22237,22996,19017] ,[22690,15454,22330] ,[17404,24056,20215] ,[18106,18106,24417]
,[19382,21087,23631] ,[24221,19508,17486] ,[15894,22244,22830] ,[24235,16664,19380]
,[23192,21662,15297] ,[23015,22257,18252] ,[21621,16133,23334] ,[18008,24488,16726]
,[18006,22289,22985] ,[23996,20102,15860] ,[20164,24051,18473] ,[21432,16933,23521]
,[24357,18782,17189] ,[22583,16389,22597] ,[23823,20742,18720] ,[23407,19391,21522]
,[22578,22578,19748] ,[21736,23263,19657] ,[21484,12233,22754] ,[14456,22818,21961]
,[12294,21545,22701] ,[17318,23269,21873] ,[14930,22360,22559] ,[22871,21316,21428]
,[24167,19441,15582] ,[23032,21489,20898] ,[20174,24058,16779] ,[20417,15614,23882]
,[19438,24170,18960] ,[24051,20168,17732] ,[13121,22015,22494] ,[18863,19758,24111]
,[21793,23316,18946] ,[22546,21771,21477] ,[17122,24560,16299] ,[21499,23042,20880]
,[20935,18296,23791] ,[20441,17725,23987] ,[22872,22109,15367] ,[21778,22553,21471]
,[20762,23843,18677] ,[23888,16148,20458] ,[23592,16768,21239] ,[20033,22464,22616]
,[23582,18702,21321] ,[24190,18563,19423] ,[19183,18259,24277] ,[14779,20656,23665]
,[19279,21797,23272] ,[24447,17963,15899] ,[22842,22078,20372] ,[18447,23390,21719]
,[17262,22476,22787] ,[23088,18070,22160] ,[22954,20585,21815] ,[17712,22821,22473]
,[20854,22444,22321] ,[21569,22352,21949] ,[19823,21491,23363] ,[23557,20432,20674]
,[23401,15407,21332] ,[19751,18856,24116] ,[18208,21671,23419] ,[24279,18679,18752]
,[17138,23867,20724] ,[21665,23195,15261] ,[22783,17674,22512] ,[18824,21398,23541]
,[20824,23169,21312] ,[24068,18402,20031] ,[22198,15848,22873] ,[20030,13896,23824]
,[19656,23631,20997] ,[11329,21024,22868] ,[19423,23439,21487] ,[12884,20241,23568]
,[21882,14221,22850] ,[23596,21302,17217] ,[22388,19066,22863] ,[23836,20757,17057]
,[20327,20327,23706] ,[17744,20460,23970] ,[21635,23169,20297] ,[21241,23543,19546]
,[16818,23642,21180] ,[22669,21098,21903] ,[18752,18752,24290] ,[24518,17076,15466]
,[18335,20132,24058] ,[15862,23717,20849] ,[17678,21231,23652] ,[20041,23223,21658]
,[22925,16863,22281] ,[23883,19967,19906] ,[20968,11273,22926] ,[23254,21727,19678]
,[22200,22960,16424] ,[19844,23786,20455] ,[20119,24013,15784] ,[24456,17976,16834]
,[19880,20729,23685] ,[17787,24330,19029] ,[17104,24546,15322] ,[20119,18322,24069]
,[22992,22233,19028] ,[23032,15958,22011] ,[20340,22737,22227] ,[21325,22880,21410]
,[23439,21127,20221] ,[18733,24325,15133] ,[23769,20679,19436] ,[24210,19495,16587]
,[22968,19747,22124] ,[18316,20955,23775] ,[21817,23338,18165] ,[19506,24224,18224]
,[22379,13776,22305] ,[16392,19306,24258] ,[19141,23208,21926] ,[21027,21830,22767]
,[23320,21798,17330] ,[20786,23863,17883] ,[20310,21141,23418] ,[22763,14401,22025]
,[23003,22244,17393] ,[24030,20143,18531] ,[16888,24402,18656] ,[19514,24229,16499]
,[13793,20820,23439] ,[23761,19819,20501] ,[20747,20747,23439] ,[16485,24131,19867]
,[23309,21786,18970] ,[23719,17938,21075] ,[21144,23456,20195] ,[17040,24502,14221]
,[18554,17596,24404] ,[14587,21344,23273] ,[20691,21508,23113] ,[22352,22352,20966]
,[23912,18194,20580] ,[20193,12836,23606] ,[17991,24475,15778] ,[18436,24102,19963]
,[16423,20207,24014] ,[24334,18751,18010] ,[16750,22090,23062] ,[21478,19810,23375]
,[23529,21227,19576] ,[23491,17633,21522] ,[21643,18180,23441] ,[20774,23853,17005]
,[21204,17651,23674] ,[20700,23790,19397] ,[22697,19430,22514] ,[16008,23082,21956]
,[19580,15645,24159] ,[21304,23599,18835] ,[21754,23279,16341] ,[23551,21252,16252]
,[21978,21978,21970] ,[22447,20016,22638] ,[22039,18652,23173] ,[21144,15480,23535]
,[23396,20246,21206] ,[22257,17974,23016] ,[19176,23963,20232] ,[24407,17907,14849]
,[19091,22413,22837] ,[24226,18611,14083] ,[18946,17019,24356] ,[24345,18767,16271]
,[23272,21747,16370] ,[24359,16845,18754] ,[20717,17059,23871] ,[22936,22175,19734]
,[17907,24416,18340] ,[21169,23477,15117] ,[20264,19394,23923] ,[20595,23700,20047]
,[20616,14739,23699] ,[21295,14538,23311] ,[16715,24286,19295] ,[19327,24082,19626]
,[18781,24364,17926] ,[24503,17054,17285] ,[22104,21312,22387] ,[22183,22944,19727]
,[17017,24490,17954] ,[19681,22152,22965] ,[23918,20009,14747] ,[20951,16313,23720]
,[22055,16715,23102] ,[23103,14941,21701] ,[19561,17705,24228] ,[17106,19912,24132]
,[14861,19862,23985] ,[16966,21465,23493] ,[24379,17870,18430] ,[18888,20636,23863]
,[20624,23722,14918] ,[17033,18960,24346] ,[18808,24383,17095] ,[22261,23019,18240]
,[16348,20986,23694] ,[17517,21899,23258] ,[22914,18787,22358] ,[18233,23951,20520]
,[18816,22943,22323] ,[24447,16974,18057] ,[21409,13468,23052] ,[18629,24244,13953]
,[23975,20077,19254] ,[17978,23759,21019] ,[21120,21120,23133] ,[23229,17278,21926]
,[18597,24224,19352] ,[21002,23328,20779] ,[24013,17361,20286] ,[23663,15808,20920]
,[21262,23561,16208] ,[22647,22647,17411] ,[22483,22483,20386] ,[24200,19482,18296]
,[14274,21935,22801] ,[22249,23008,17381] ,[19402,20272,23918] ,[15649,20452,23857]
,[21772,15237,23113] ,[22084,22848,20363] ,[23587,21292,18869] ,[22440,17226,22827]
,[17980,24469,17575] ,[24472,17010,14377] ,[22513,22513,15385] ,[18677,22064,23148]
,[18792,24370,16170] ,[21868,17486,23289] ,[22720,20323,22249] ,[24291,17748,19112]
,[20602,22971,21792] ,[20316,11604,23353] ,[17931,24431,14713] ,[22604,18406,22706]
,[24088,19343,14446] ,[20717,23803,16021] ,[24168,17578,19728] ,[13836,22439,22248]
,[13940,20074,23795] ,[22157,20545,22725] ,[19361,24106,14341] ,[16433,22627,22552]
,[22638,22638,19046] ,[17086,20744,23850] ,[24080,16434,19948] ,[16907,22969,22234]
,[17722,19578,24221] ,[23313,20987,20806] ,[19532,24245,17409] ,[16201,23941,20383]
,[21447,21447,22787] ,[18711,24311,18675] ,[22432,20842,22335] ,[19857,19857,23936]
,[15522,21186,23503] ,[23776,18947,20831] ,[21502,20685,23119] ,[22714,21945,20953]
,[24302,18710,15245] ,[17676,23534,21471] ,[20023,23932,14661] ,[20452,23577,20638]
,[24434,17945,17673] ,[16174,21662,23301] ,[21824,21021,22774] ,[15676,19611,24142]
,[19457,22724,22489] ,[21959,13065,22553] ,[21839,20201,23070] ,[22345,21562,21956]
,[19772,22993,22096] ,[20177,16393,24032] ,[23470,21162,15169] ,[12658,20941,23173]
,[19457,24183,15485] ,[23932,19145,20287] ,[20888,12605,23220] ,[22185,22185,21494]
,[21380,18806,23560] ,[23356,18413,21765] ,[23790,20704,16081] ,[23713,20615,14988]
,[22308,14878,22609] ,[17094,24543,17172] ,[23200,20018,21689] ,[23331,16393,21648]
,[20190,24073,17672] ,[17619,24209,19651] ,[24056,19301,19688] ,[19288,16374,24276]
,[19890,17084,24146] ,[23681,20576,20086] ,[20555,22167,22709] ,[13524,21465,23007]
,[18737,23617,21274] ,[17602,18560,24399] ,[16444,23382,21591] ,[23822,17093,20791]
,[20622,18874,23873] ,[15506,22742,22279] ,[23153,20808,21337] ,[19335,19335,24132]
,[21320,22112,22382] ] $
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Set your z-probe height. The probe measure point must be just below the tip; i.e. its (x,y) offset must be (0,0).
But it can have nonzero height. If you know the height then set its value here. If you do not know it set it to 0.
It does not really matter if it is not set precisely. The only consequence of incorrectly set probe height is that
your all your computed tower endstop adjustements (α,β,γ) will be uniformly offset by the probe height error.
In this case the z-probe height is 868 steps. Set your own value here:
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ph : 868 - 33 $ 
mm : map( lambda([lst], [ lst[1]-ph, lst[2]-ph, lst[3]-ph ]), m) $
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
MINPACK Version
   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]
And finally we just need to find [xa,ya,xc,α,β,γ] which will minimize sum of squares of ZEq over mm.
This section uses minpack to do it. The next section does the same using lbfgs. Both options lead to
the same result but this minpack version does not need to fiddle that much with the termination
condition. Read the lbfgs section comments for more discussion about why we do not optimize
also the diagonal rod length.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
define( ZFn(ta,tb,tc), lhs(ZEq) ) ;
ZFns : map( lambda([args], apply(ZFn, args)), mm ) $
ZFnsSansR : map( lambda([arg], subst(ir,r,arg)), ZFns ) $
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
load(minpack) $
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
RV : minpack_lsquares( ZFns, [r,xa,ya,xc,α,β,γ], [ir,ixa,iya,ixc,0,0,0] ) ;
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
RVr : minpack_lsquares( ZFnsSansR, [xa,ya,xc,α,β,γ], [ixa,iya,ixc,0,0,0] ) ;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
LBFGS Version
   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]
We define function FAll which is sum of squares of ZEq over all the measured data points. This the error
function we want to minimize. If we can get it to zero for some vector [r,xa,ya,xc,α,β,γ], then that vector
should represent the precise firmware configuration parameters.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
define( ZFnSq(ta, tb, tc), lhs(ZEq)^2 ) ;
define( ZFnSq1(r,xa,ya,xc,α,β,γ), ''( funmake(ZFnSq,mm[1]) ) ) $
define( FAll(r,xa,ya,xc,α,β,γ), ''( lsum( funmake(ZFnSq,l), l, mm ) ) ) $
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
OK, and here we go to find the best firmware parameters (r, xa, ya, xc, α, β, γ). We will do it by minimizing FAll.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
load( lbfgs ) $
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
A quick note about lbfgs(F, x, x0, ε, printFlags) failures. It is a newton like method for finding an extreme.
So it goes along gradient till the gradient is not small enough. The small enough is defined like this:
|∇F(x)| < ε*max(1,|x|)
So (for the algorithm to finish) the gradient change must be really small if also the point x (at which we are
computing F) is small (near the coordinate centre). If the condition on gradient size is really tough then the
line search may fail (maybe because of underflow, or maybe because there is no extreme near the x or
maybe something else). Slowly increase the value of  ε (the second to the last) argument of lbfsg untill it
finds something. The best ε is the smallest one for which a result is found.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Here we compute all the precise parameters at once. This should work without problems if the heatbed is
planar, the additional point was properly selected, and the z-heights were measured near enough the edge
of the available built volume (for the points which should be at the edges). That means the heatbed must
be big enough to extend to the theoretical edge of the built area. If so then we should get the correct
firmware parameters in one step. The equation should have at most two real minimums. One corresponing
to the diagonal rods pointing down and small absolute values of  (α,β,γ) and, possibly, one more
corresponding to the diagonal rods poining up and huge absolute values of  (α,β,γ). Since our starting
point has α=β=γ=0 we should get to the proper minimum. There were no convergence problems with
the 11 points we selected.
A posible reason for bad convegence is that we try to optimize both the tower positions and the diagonal
rod length at once. The tower positions contain the delta radius (corrected for tower radial/diagonal distance
errors if the towers are not precisely positioned). Both errors in the diagonal rod length and the delta radius
lead to nicely concave/convex heatbed z-position error near the centre (looks like a tip of ellipsoid or
paraboloid). These two can partialy compensate for each other especially when measurements are not
done far enough from centre. That means that their convergence (when optimized and the measurement
points are not far enough from the centre) together may be poor. They can drift from their precise values
together more easily. This drift will result in incorrect size (well and also incorrect shape because the error
is not linear) of the printed objects. Incorrect steps/mm setting for the tower carriages results in a similar
kind of error too.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
RV : lbfgs( FAll(r,xa,ya,xc,α,β,γ), [r,xa,ya,xc,α,β,γ], [ir,ixa,iya,ixc,0,0,0], 20.0, [1,1]);
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
RVr :  lbfgs( FAll(ir,xa,ya,xc,α,β,γ), [xa,ya,xc,α,β,γ], [ixa,iya,ixc,0,0,0], 15.0, [1,1]) ;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
RVes :  lbfgs( FAll(ir,ixa,iya,ixc,α,β,γ), [α,β,γ], [0,0,0], 1.0, [1,1]) ;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
[ixa, iya, ixc];
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
